name: Lint and Test Charts
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.12.1

      # - name: Set up podman
      #   run: |
      #     source /etc/os-release
      #     echo "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_${VERSION_ID}/ /" | sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list
      #     curl -L https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_${VERSION_ID}/Release.key | sudo apt-key add -
      #     sudo apt-get update
      #     sudo apt-get -y install podman

      - name: Set up oc client
        run: |
          wget https://mirror.openshift.com/pub/openshift-v4/clients/oc/latest/linux/oc.tar.gz
          sudo tar xzvf oc.tar.gz -C /usr/local/bin

      - name: Install skupper cli
        run: |
          curl https://skupper.io/install.sh | sh
          skupper version
          
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.6.0


      - name: Run chart-testing (list-changed)
        id: list-changed 
        run: |
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Run chart-testing (lint)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct lint --validate-maintainers false --check-version-increment false --target-branch ${{ github.event.repository.default_branch }} 

      - name: Create kind cluster
        if: steps.list-changed.outputs.changed == 'true'
        uses: helm/kind-action@v1.7.0

      - name: Install RHSI with Ingress Type Route
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          set -e
          kubectl apply -f route-crd.yaml
          helm install --create-namespace --namespace skupper \
               skupper charts/rhsi
          kubectl wait --for=condition=available --timeout=60s deploy/skupper-router -n skupper
          kubectl wait --for=condition=available --timeout=60s deploy/skupper-service-controller -n skupper
          kubectl wait --for=condition=available --timeout=60s deploy/skupper-prometheus -n skupper
          skupper debug events -n skupper | grep -q established

      - name: Install RHSI with Ingress Type LoadBalancer
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          set -e
          helm upgrade --install skupper ./ -n skupper-3 --create-namespace --set common.ingressType=loadbalancer
          kubectl wait --for=condition=available --timeout=60s deploy/skupper-router -n skupper
          kubectl wait --for=condition=available --timeout=60s deploy/skupper-service-controller -n skupper
          kubectl wait --for=condition=available --timeout=60s deploy/skupper-prometheus -n skupper
          skupper debug events -n skupper | grep -q established

      - name: Install RHSI with Ingress Type nodeport
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          set -e
          helm upgrade --install skupper ./ -n skupper-3 --create-namespace --set common.ingressType=nodeport
          kubectl wait --for=condition=available --timeout=60s deploy/skupper-router -n skupper
          kubectl wait --for=condition=available --timeout=60s deploy/skupper-service-controller -n skupper
          kubectl wait --for=condition=available --timeout=60s deploy/skupper-prometheus -n skupper
          skupper debug events -n skupper | grep -q established

          

            
