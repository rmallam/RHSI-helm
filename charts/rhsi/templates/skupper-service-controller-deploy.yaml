{{ if not .Values.common.siteconfigonly }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: skupper-service-controller
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      skupper.io/component: service-controller
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: skupper-service-controller
        app.kubernetes.io/part-of: skupper
        skupper.io/component: service-controller
    spec:
      initContainers: 
      - name: getuids
        image: quay.io/openshift/origin-cli:4.12.0
        command: 
          - "/bin/sh"
          - "-c"
          - |
            until SKUPPER_SITE_ID=$(oc get cm skupper-site -o jsonpath='{.metadata.uid}') ; do echo "waiting"; sleep 2; done ; echo "export SKUPPER_SITE_ID=${SKUPPER_SITE_ID}" > /etc/sharedvol/env
            until OWNER_UID=$(oc get deploy skupper-router -o jsonpath='{.metadata.uid}'); do echo "waiting"; sleep 2; done; echo "export OWNER_UID=${OWNER_UID}" >> /etc/sharedvol/env
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 256Mi
        volumeMounts:
        - mountPath: /etc/sharedvol
          name: sharedvol
      containers:
      - env:
        - name: SKUPPER_NAMESPACE
          value: {{ .Release.Namespace }}
        - name: SKUPPER_SITE_NAME
          value: {{ .Release.Namespace }}
        - name: SKUPPER_SERVICE_ACCOUNT
          value: skupper-router
        - name: SKUPPER_ROUTER_MODE
          value: interior
        - name: OWNER_NAME
          value: skupper-router
        - name: SKUPPER_DISABLE_SERVICE_SYNC
          value: "{{ .Values.serviceController.disableServiceSync }}"
        - name: QDROUTERD_IMAGE
          value: {{ .Values.router.image.repository }}:{{ .Values.router.image.version }}
{{- if and .Values.console.enabled (eq (.Values.console.auth) "internal") }}
        - name: FLOW_USERS
          value: /etc/console-users
        - name: METRICS_USERS
          value: /etc/console-users
{{- end }}
        image: {{ .Values.serviceController.image.repository }}:{{ .Values.serviceController.image.version }}
        command: ["/bin/sh", "-c", "source /etc/sharedvol/env && /app/service-controller"]
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 8182
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: service-controller
        ports:
        - containerPort: 8010
          name: metrics
          protocol: TCP
        - containerPort: 8080
          name: rest-api
          protocol: TCP
        - containerPort: 8081
          name: claims
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 8182
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: "{{ .Values.serviceController.cpu.limits }}"
            memory: "{{ .Values.serviceController.memory.limits }}"
          requests:
            cpu: "{{ .Values.serviceController.cpu.requests }}"
            memory: "{{ .Values.serviceController.memory.requests }}"
        securityContext:
          runAsNonRoot: true
{{- if not (eq (.Values.common.cluster) "openshift") }}
        runAsUser: 2000
{{- end }}
        startupProbe:
          failureThreshold: 60
          httpGet:
            path: /healthz
            port: 8182
            scheme: HTTP
          initialDelaySeconds: 1
          periodSeconds: 1
          successThreshold: 1
          timeoutSeconds: 1
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/service-controller/certs/
          name: skupper-claims-server
{{- if .Values.console.enabled }}
        - mountPath: /etc/service-controller/console/
          name: skupper-console-certs
{{- end }}
{{- if and .Values.console.enabled (eq (.Values.console.auth) "internal") }}
        - name: skupper-console-users
          mountPath: /etc/console-users/
{{- end }}
        - mountPath: /etc/messaging/
          name: skupper-local-client
        - mountPath: /etc/sharedvol
          name: sharedvol
{{- if .Values.flowCollector.enabled }}
      - env:
        - name: SKUPPER_NAMESPACE
          value: {{ .Release.Namespace }}
        - name: SKUPPER_SITE_NAME
          value: {{ .Release.Namespace }}
        - name: SKUPPER_SERVICE_ACCOUNT
          value: skupper-router
        - name: SKUPPER_ROUTER_MODE
          value: {{ .Values.router.mode }}
{{- if and .Values.console.enabled (eq (.Values.console.auth) "internal") }}
        - name: FLOW_USERS
          value: /etc/console-users
{{- end }}
        - name: OWNER_NAME
          value: skupper-router
        image: {{ .Values.flowCollector.image.repository }}:{{ .Values.flowCollector.image.tag }}
        imagePullPolicy: Always
        name: flow-collector
        command: ["/bin/sh", "-c", "source /etc/sharedvol/env && /app/flow-collector"]
        resources:
            limits:
              cpu: "{{ .Values.flowCollector.cpu.limits }}"
              memory: "{{ .Values.flowCollector.memory.limits }}"
            requests:
              cpu: "{{ .Values.flowCollector.cpu.requests }}"
              memory: "{{ .Values.flowCollector.memory.requests }}"
        securityContext:
          runAsNonRoot: true
{{- if not (eq (.Values.common.cluster) "openshift") }}
          runAsUser: 2000
{{- end }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/service-controller/console/
          name: skupper-console-certs
        - mountPath: /etc/messaging/connect.json
          name: connectjson
          subPath: connect.json
        - name: skupper-claims-server
          mountPath: /etc/service-controller/certs/
        - name: skupper-local-client
          mountPath: /etc/messaging/tls.key
          subPath: tls.key
        - name: skupper-local-client
          mountPath: /etc/messaging/tls.crt
          subPath: tls.crt
        - name: skupper-local-client
          mountPath: /etc/messaging/ca.crt
          subPath: ca.crt
        - mountPath: /etc/sharedvol
          name: sharedvol
{{- if and .Values.console.enabled (eq (.Values.console.auth) "internal") }}
        - name: skupper-console-users
          mountPath: /etc/console-users/
{{- end }}
{{- end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
{{- if not (eq (.Values.common.cluster) "openshift") }}
        runAsUser: 2000
{{- end }}
      serviceAccount: skupper-service-controller
      serviceAccountName: skupper-service-controller
      terminationGracePeriodSeconds: 30
      volumes:
      - name: skupper-claims-server
        secret:
          defaultMode: 420
          secretName: skupper-claims-server
{{ if .Values.console.enabled }}
      - name: skupper-console-certs
        secret:
          defaultMode: 420
          secretName: skupper-local-client
{{- end }}
{{- if and .Values.console.enabled (eq (.Values.console.auth) "internal") }}
      - name: skupper-console-users
        secret:
          secretName: skupper-console-users
{{- end }}
      - name: skupper-local-client
        secret:
          defaultMode: 420
          secretName: skupper-local-client
      - name: connectjson
        configMap:
          defaultMode: 420
          name: skupper-connectjson
      - name: sharedvol
        emptyDir: {}

{{- end }}
